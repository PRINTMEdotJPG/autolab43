# Generated by Django 5.2 on 2025-04-30 20:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата эксперимента')),
                ('temperature', models.FloatField(verbose_name='Температура (°C)')),
                ('tube_length', models.FloatField(verbose_name='Длина трубы (м)')),
            ],
            options={
                'verbose_name': 'Эксперимент',
                'verbose_name_plural': 'Эксперименты',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(help_text='Полное имя пользователя (только кириллица)', max_length=100, verbose_name='ФИО')),
                ('email', models.EmailField(help_text='Уникальный email пользователя', max_length=254, unique=True, verbose_name='Email')),
                ('group_name', models.CharField(blank=True, help_text='Название учебной группы (кириллица + цифры)', max_length=20, null=True, verbose_name='Группа')),
                ('role', models.CharField(choices=[('student', 'Студент'), ('teacher', 'Преподаватель')], default='student', help_text='Роль пользователя в системе', max_length=10, verbose_name='Роль')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, может ли пользователь входить в админ-панель')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли пользователь')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('experiment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='lab_data.experiments', verbose_name='Эксперимент')),
                ('gamma_calculated', models.FloatField(verbose_name='Рассчитанное γ')),
                ('gamma_reference', models.FloatField(verbose_name='Эталонное γ')),
                ('error_percent', models.FloatField(verbose_name='Отклонение (%)')),
                ('status', models.CharField(choices=[('success', 'Успешно'), ('fail', 'Неудача')], max_length=10, verbose_name='Статус')),
                ('detailed_results', models.JSONField(verbose_name='Детальные результаты')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
        migrations.AddField(
            model_name='experiments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='EquipmentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_ms', models.IntegerField(verbose_name='Время (мс)')),
                ('microphone_signal', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1023)], verbose_name='Сигнал микрофона')),
                ('tube_position', models.FloatField(verbose_name='Положение трубы (мм)')),
                ('voltage', models.FloatField(verbose_name='Напряжение (В)')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_data', to='lab_data.experiments', verbose_name='Эксперимент')),
            ],
            options={
                'verbose_name': 'Данные оборудования',
                'verbose_name_plural': 'Данные оборудования',
            },
        ),
        migrations.CreateModel(
            name='Calculations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField(verbose_name='Номер шага')),
                ('description', models.TextField(verbose_name='Описание')),
                ('formula_used', models.TextField(blank=True, verbose_name='Использованная формула')),
                ('input_data', models.JSONField(verbose_name='Входные данные')),
                ('output_data', models.JSONField(verbose_name='Выходные данные')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время выполнения')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculations', to='lab_data.experiments', verbose_name='Эксперимент')),
            ],
            options={
                'verbose_name': 'Расчёт',
                'verbose_name_plural': 'Расчёты',
                'ordering': ['step_number'],
            },
        ),
        migrations.CreateModel(
            name='Protocols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата генерации')),
                ('protocol_path', models.CharField(max_length=255, verbose_name='Путь к протоколу')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('final', 'Финальный')], default='draft', max_length=10, verbose_name='Статус')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='lab_data.experiments', verbose_name='Эксперимент')),
            ],
            options={
                'verbose_name': 'Протокол',
                'verbose_name_plural': 'Протоколы',
            },
        ),
    ]
